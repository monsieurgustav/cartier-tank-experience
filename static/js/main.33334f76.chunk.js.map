{"version":3,"sources":["Connection.ts","screens/HomeScreen.tsx","screens/ControlScreen.tsx","screens/ResultScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Connection","apikey","_socket","anyWindow","window","sharedSocket","console","log","io","query","transports","reconnectionAttempts","this","on","onConnected","bind","onError","emit","event","listener","off","err","error","getArgFromLocation","location","argName","parts","search","split","length","HomeScreen","connection","resetStartingTimeout","state","starting","onStarted","props","history","replace","start","clearTimeout","setState","setTimeout","resetStarting","undefined","React","PureComponent","withRouter","ControlScreen","canTakePhoto","photoNumber","onPhotoTaken","onFinish","resultFilename","onDisconnect","onClick","takePhoto","disabled","takePicture","ResultScreen","closed","waiting","restart","close","leave","share","a","nav","navigator","img","document","getElementById","canShare","fetch","src","res","blob","file","File","shareData","files","title","url","id","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.33334f76.chunk.js","sourcesContent":["import { Socket } from \"socket.io\";\r\n// @ts-ignore\r\nimport io from \"socket.io-client\";\r\nimport {Location} from 'history';\r\n\r\ntype EventNames = 'onStarted' | 'onPhotoTaken' | 'onFinish' | 'onDisconnect';\r\n\r\nexport default class Connection {\r\n    _socket: Socket;\r\n\r\n    constructor(apikey: string) {\r\n        const anyWindow = window as any;\r\n        if (!anyWindow.sharedSocket) {\r\n            console.log(`new connection to ${apikey}`);\r\n            anyWindow.sharedSocket = io('https://cartier.vista-api.net/cartier', {\r\n                query: {apikey},\r\n                transports: ['websocket'],\r\n                reconnectionAttempts: 15\r\n            });\r\n        }\r\n\r\n        this._socket = anyWindow.sharedSocket as Socket;\r\n        this._socket.on('connect', this.onConnected.bind(this));\r\n        this._socket.on('error', this.onError.bind(this));\r\n    }\r\n\r\n    public start() {\r\n        this._socket.emit('start');\r\n    }\r\n\r\n    public takePicture() {\r\n        this._socket.emit('takePicture');\r\n    }\r\n\r\n    public leave() {\r\n        this._socket.emit('leave');\r\n    }\r\n\r\n    public on(event: EventNames, listener: (...args: any[]) => void) {\r\n        this._socket.on(event, listener);\r\n    }\r\n\r\n    public off(event: EventNames, listener: (...args: any[]) => void) {\r\n        this._socket.off(event, listener);\r\n    }\r\n\r\n    onConnected() {\r\n        console.log('connected!');\r\n    }\r\n\r\n    onError(err: any) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nexport function getArgFromLocation(location: Location<unknown>, argName: 'apiKey' | 'resultFilename'): string {\r\n    const parts = location.search.split(`${argName}=`);\r\n    if (parts.length < 2) {\r\n        console.error(`An ${argName} query param is required`);\r\n        return '';\r\n    }\r\n\r\n    const right = parts[1];\r\n    return right.split('&')[0];\r\n};\r\n","import React from \"react\";\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport Connection, { getArgFromLocation } from '../Connection';\r\n\r\nconst RESET_STARTING_TIMEOUT = 2000;\r\n\r\ninterface Props extends RouteComponentProps<{}> {\r\n}\r\n\r\nclass HomeScreen extends React.PureComponent<Props> {\r\n    apikey = '';\r\n    connection?: Connection;\r\n    resetStartingTimeout?: NodeJS.Timeout;\r\n\r\n    state = {\r\n        starting: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.apikey = getArgFromLocation(this.props.location, 'apiKey');\r\n        if (!!this.apikey) {\r\n            this.connection = new Connection(this.apikey);\r\n            this.connection.on('onStarted', this.onStarted);\r\n            this.start();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.resetStartingTimeout) {\r\n            clearTimeout(this.resetStartingTimeout);\r\n        }\r\n        this.connection?.off('onStarted', this.onStarted);\r\n    }\r\n\r\n    render() {\r\n        const { starting } = this.state;\r\n        return (\r\n            <div>\r\n                <h2>Home</h2>\r\n                { starting ? (\r\n                    <span>Connecting...</span>\r\n                    ) : (\r\n                    <span>Scan the QR code</span>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    start() {\r\n        this.connection?.start();\r\n\r\n        const starting = true;\r\n        this.setState({starting});\r\n\r\n        if (this.resetStartingTimeout) {\r\n            clearTimeout(this.resetStartingTimeout);\r\n        }\r\n        this.resetStartingTimeout = setTimeout(this.resetStarting.bind(this), RESET_STARTING_TIMEOUT);\r\n    }\r\n\r\n    resetStarting() {\r\n        if (this.resetStartingTimeout) {\r\n            clearTimeout(this.resetStartingTimeout);\r\n            this.resetStartingTimeout = undefined;\r\n        }\r\n\r\n        const starting = false;\r\n        this.setState({starting});\r\n    }\r\n\r\n    onStarted = () => {\r\n        const { history } = this.props;\r\n        history.replace(`/control?apiKey=${this.apikey}`);\r\n    }\r\n}\r\n\r\nexport default withRouter(HomeScreen);\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from 'react-router';\r\nimport Connection, { getArgFromLocation } from '../Connection';\r\n\r\nconst PHOTO_COUNT = 3;\r\n\r\ninterface Props extends RouteComponentProps<{}> {\r\n}\r\n\r\nexport default class ControlScreen extends React.PureComponent<Props> {\r\n    apikey = '';\r\n    connection?: Connection;\r\n\r\n    state = {\r\n        canTakePhoto: true,\r\n        photoNumber: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.apikey = getArgFromLocation(this.props.location, 'apiKey');\r\n        this.connection = new Connection(this.apikey);\r\n        this.connection.on('onPhotoTaken', this.onPhotoTaken);\r\n        this.connection.on('onFinish', this.onFinish);\r\n        this.connection.on('onDisconnect', this.onDisconnect);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.connection?.off('onPhotoTaken', this.onPhotoTaken);\r\n        this.connection?.off('onFinish', this.onFinish);\r\n        this.connection?.off('onDisconnect', this.onDisconnect);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Control</h2>\r\n                <button\r\n                    onClick={this.takePhoto.bind(this)}\r\n                    disabled={!this.state.canTakePhoto}\r\n                    >Take photo {this.state.photoNumber + 1}</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    takePhoto() {\r\n        this.connection?.takePicture();\r\n\r\n        const canTakePhoto = false;\r\n        this.setState({canTakePhoto});\r\n    }\r\n\r\n    onPhotoTaken = () => {\r\n        const canTakePhoto = true;\r\n        const photoNumber = this.state.photoNumber + 1;\r\n        if (photoNumber < PHOTO_COUNT) {\r\n            this.setState({canTakePhoto, photoNumber});\r\n        }\r\n    }\r\n\r\n    onFinish = (resultFilename: string) => {\r\n        const { history } = this.props;\r\n        history.replace(`/result?apiKey=${this.apikey}&resultFilename=${resultFilename}`);\r\n    }\r\n\r\n    onDisconnect = () => {\r\n        const { history } = this.props;\r\n        history.replace('/');\r\n    }\r\n}\r\n","import { timeStamp } from \"console\";\r\nimport React from \"react\";\r\nimport { RouteComponentProps } from 'react-router';\r\nimport Connection, { getArgFromLocation } from '../Connection';\r\n\r\ninterface NavigatorCanShare extends Navigator {\r\n    canShare?: (data?: ShareData) => boolean;\r\n}\r\n\r\ninterface Props extends RouteComponentProps<{}> {\r\n}\r\n\r\nexport default class ResultScreen extends React.PureComponent<Props> {\r\n    apikey = '';\r\n    connection?: Connection;\r\n\r\n    state = {\r\n        closed: false,\r\n        resultFilename: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.apikey = getArgFromLocation(this.props.location, 'apiKey');\r\n        this.connection = new Connection(this.apikey);\r\n        this.connection.on('onStarted', this.onStarted);\r\n        this.connection.on('onDisconnect', this.onDisconnect);\r\n\r\n        const resultFilename = getArgFromLocation(this.props.location, 'resultFilename');\r\n        this.setState({resultFilename});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.connection?.off('onStarted', this.onStarted);\r\n        this.connection?.off('onDisconnect', this.onDisconnect);\r\n    }\r\n\r\n    render() {\r\n        const {closed, resultFilename} = this.state;\r\n        return (\r\n            <div>\r\n                <h2>Result</h2>\r\n                {!closed && (\r\n                    <div>\r\n                        <button onClick={this.restart}>Restart</button>\r\n                        <button onClick={this.close}>Close</button>\r\n                        {!!navigator.share && (\r\n                            <button onClick={this.share}>Share</button>\r\n                        )}\r\n                    </div>\r\n                )}\r\n                <img\r\n                    id=\"resultImg\"\r\n                    src={`https://cartier.vista-api.net/uploads/cartier/${resultFilename}`}\r\n                    />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onFinish = () => {\r\n        const waiting = false;\r\n        this.setState({waiting});\r\n    }\r\n\r\n    onStarted = () => {\r\n        const { history } = this.props;\r\n        history.replace(`/control?apiKey=${this.apikey}`);\r\n    }\r\n\r\n    onDisconnect = () => {\r\n        const closed = true;\r\n        this.setState({closed});\r\n    }\r\n\r\n    restart = () => {\r\n        const closed = true;\r\n        this.setState({closed});\r\n\r\n        this.connection?.start();\r\n    }\r\n\r\n    close = () => {\r\n        const closed = true;\r\n        this.setState({closed});\r\n\r\n        this.connection?.leave();\r\n    }\r\n\r\n    share = async () => {\r\n        const nav = navigator as NavigatorCanShare;\r\n        const img = document.getElementById('resultImg') as HTMLImageElement;\r\n        // level 2 share\r\n        if (nav.canShare) {\r\n            const res = await fetch(img.src);\r\n            const blob = await res.blob();\r\n            const file = new File([blob], 'Cartier Tank Experience.jpg', blob)\r\n            const shareData = {\r\n                // title: 'Cartier Tank Experience',  breaks on iOS\r\n                files: [file],\r\n            } as ShareData;\r\n            if (nav.canShare(shareData)) {\r\n                nav.share(shareData);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // level 1 share\r\n        if (nav.share) {\r\n            nav.share({\r\n                title: 'Cartier Tank Experience',\r\n                url: img.src,\r\n            });\r\n        }\r\n        else {\r\n            console.error(`Your system doesn't support sharing.`);\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport ControlScreen from './screens/ControlScreen';\nimport ResultScreen from './screens/ResultScreen';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/control\" component={ControlScreen} />\n          <Route path=\"/result\" component={ResultScreen} />\n          <Route path=\"/\" component={HomeScreen} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}